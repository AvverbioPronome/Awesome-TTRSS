version: "3"
services:
  service.rss:
    image: wangqiru/ttrss:latest
    ports:
      - "${PORT}:80"
    env_file:
      - awesome.env
    environment:
      - "SELF_URL_PATH=${SELF_URL_PATH:?err}" # please change to your own domain
      - "DB_PASS=${DB_PASS:?err}" # use the same password defined in `database.postgres`
      - "PUID=${PUID:-1000}"
      - "PGID=${PGID:-1000}"
    volumes:
      - feed-icons:/var/www/feed-icons/
    networks:
      - public_access
      - service_only
      - database_only
    stdin_open: true
    tty: true
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "--fail", "-I", "http://localhost:${PORT}"]
    depends_on:
      - "database.postgres"

  service.mercury: # set Mercury Parser API endpoint to `service.mercury:3000` on TTRSS plugin setting page
    image: wangqiru/mercury-parser-api:latest
    networks:
      - public_access
      - service_only
    restart: unless-stopped

  service.opencc: # set OpenCC API endpoint to `service.opencc:3000` on TTRSS plugin setting page
    image: wangqiru/opencc-api-server:latest
    environment:
      - NODE_ENV=production
    networks:
      - service_only
    restart: unless-stopped

  database.postgres:
    image: postgres:13-alpine
    env_file:
      - awesome.env
    environment:
      - "POSTGRES_PASSWORD=${DB_PASS:?err}" # feel free to change the password
    volumes:
      - ~/postgres/data/:/var/lib/postgresql/data # persist postgres data to ~/postgres/data/ on the host
    networks:
      - database_only
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]


  # utility.watchtower:
  #   image: containrrr/watchtower:latest
  #   volumes:
  #     - /var/run/docker.sock:/var/run/docker.sock
  #   environment:
  #     - WATCHTOWER_CLEANUP=true
  #     - WATCHTOWER_POLL_INTERVAL=86400
  #   restart: always

volumes:
  feed-icons:

networks:
  public_access: # Provide the access for ttrss UI
  service_only: # Provide the communication network between services only
    internal: true
  database_only: # Provide the communication between ttrss and database only
    internal: true
